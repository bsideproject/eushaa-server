type Query {
  login(email: String!, password: String!): String
  isLogin(authorization: String!): String
  todos(user_id: Int!): [Todos!]!
  todo(user_id: Int!, title: String!): Todos
  items(todo_id: Int!): [Items!]!
  todoLists(user_id: Int!, title: String!): [Items!]!

  team(user_id: Int!): Teams
  members(team_id: Int!): [User!]!
}
type Mutation {
  signup(email: String!, name: String!, password: String!): User
  makeTodo(userId: Int!, title: String): Todos!
  updateTodo(id: Int!, title: String): Int!
  deleteTodo(id: Int!): Int!

  makeItem(todoId: Int!, content: String): Items!
  updateItem(
    id: Int!
    content: String
    isComplete: Boolean
    completedAt: String
  ): Int!
  deleteItem(id: Int!): Int!

  makeTeam: Teams!
  participateTeam(user_id: Int!, team_id: Int!): Int!
  updateTeam(id: Int!, level: Int, gauge: Int): Int!
  increaseValues(id: Int!, keys: [String!]!): Teams
  deleteTeam(id: Int!): Int!
}
type User {
  id: String!
  email: String!
  name: String!
  password: String!
  team_id: String
}
type Todos {
  id: String!
  user_id: String!
  title: String
}
type Items {
  id: String!
  todo_id: String!
  content: String
  updated_at: Date
  is_complete: String
  completed_at: Date
}


type Teams {
  id: String!
  level: Int
  gauge: Int
  created_at: Date
}

type Levels {
  id: String!
  level: Int!
  bg_img: String
}

type SpaceItems {
  id: String!
  level_id: String!
  pos_x: Float
  pos_y: Float
  deactivate_image: String
  activate_image: String
}

type SpaceItemLog {
  id: String!
  team_id: String!
  item_id: String!
  user_id: String!
  created_at: Date
}

scalar Date
